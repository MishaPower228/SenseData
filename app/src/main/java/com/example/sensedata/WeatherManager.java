package com.example.sensedata;

import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.os.Handler;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.core.app.ActivityCompat;

import com.example.sensedata.model.WeatherResponse;
import com.example.sensedata.network.ApiClientWeather;
import com.example.sensedata.network.WeatherApiService;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationServices;
import com.squareup.picasso.Picasso;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class WeatherManager {
    private final Activity activity;
    private final Handler handler = new Handler();
    private final int UPDATE_INTERVAL = 10 * 60 * 1000; // 10 —Ö–≤

    private final FusedLocationProviderClient fusedLocationClient;

    private final Runnable weatherUpdater = new Runnable() {
        @Override
        public void run() {
            fetchWeather();
            handler.postDelayed(this, UPDATE_INTERVAL);
        }
    };

    public WeatherManager(Activity activity) {
        this.activity = activity;
        fusedLocationClient = LocationServices.getFusedLocationProviderClient(activity);
    }

    // üîπ –ó–∞–ø—É—Å–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    public void startWeatherUpdates() {
        // 1. –ø–æ–∫–∞–∑–∞—Ç–∏ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ (—è–∫—â–æ —î)
        showCachedWeather();

        // 2. –æ–¥—Ä–∞–∑—É –æ–Ω–æ–≤–∏—Ç–∏ –ø–æ–≥–æ–¥—É –∑ API
        fetchWeather();

        // 3. –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        handler.postDelayed(weatherUpdater, UPDATE_INTERVAL);
    }

    public void stopWeatherUpdates() {
        handler.removeCallbacks(weatherUpdater);
    }

    public void handlePermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        // –º–æ–∂–Ω–∞ –¥–æ—Ä–æ–±–∏—Ç–∏ –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ
    }

    // ------------------ –û—Å–Ω–æ–≤–Ω–∏–π –∑–∞–ø–∏—Ç ------------------

    private void fetchWeather() {
        if (ActivityCompat.checkSelfPermission(activity, Manifest.permission.ACCESS_FINE_LOCATION)
                != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(activity,
                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 123);
            return;
        }

        fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {
            if (location != null) {
                fetchWeatherByCoordinates(location.getLatitude(), location.getLongitude());
            }
        });
    }

    private void fetchWeatherByCoordinates(double lat, double lon) {
        WeatherApiService apiService = ApiClientWeather.getClient().create(WeatherApiService.class);
        Call<WeatherResponse> call = apiService.getWeatherByCoordinates(
                lat, lon,
                "2ef0e3c8a248cd6859d19fd7e7e2b04f", // üîë —Ç–≤—ñ–π API-–∫–ª—é—á
                "metric"
        );

        call.enqueue(new Callback<WeatherResponse>() {
            @Override
            public void onResponse(Call<WeatherResponse> call, Response<WeatherResponse> response) {
                if (response.isSuccessful() && response.body() != null) {
                    WeatherResponse weather = response.body();
                    showWeatherOnUi(weather);
                    saveWeatherToCache(weather); // üëà –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–µ—à
                }
            }

            @Override
            public void onFailure(Call<WeatherResponse> call, Throwable t) {
                Toast.makeText(activity, "–ü–æ–º–∏–ª–∫–∞ –ø–æ–≥–æ–¥–∏: " + t.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
    }

    // ------------------ UI + –∫–µ—à ------------------

    private void showWeatherOnUi(WeatherResponse weather) {
        ((TextView) activity.findViewById(R.id.textWeatherCity))
                .setText("–ú—ñ—Å—Ç–æ: " + weather.cityName);
        ((TextView) activity.findViewById(R.id.textWeatherMain))
                .setText("–ü–æ–≥–æ–¥–∞: " + weather.weather.get(0).main);
        ((TextView) activity.findViewById(R.id.textWeatherDescription))
                .setText("–û–ø–∏—Å: " + weather.weather.get(0).description);
        ((TextView) activity.findViewById(R.id.textWeatherTemp))
                .setText("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + weather.main.temp + "¬∞C");
        ((TextView) activity.findViewById(R.id.textWeatherHumidity))
                .setText("–í–æ–ª–æ–≥—ñ—Å—Ç—å: " + weather.main.humidity + "%");
        ((TextView) activity.findViewById(R.id.textWeatherPressure))
                .setText("–¢–∏—Å–∫: " + weather.main.pressure + " –≥–ü–∞");

        ImageView image = activity.findViewById(R.id.imageWeatherIcon);
        String iconUrl = "https://openweathermap.org/img/wn/" +
                weather.weather.get(0).icon + "@2x.png";
        Picasso.get().load(iconUrl).into(image);
    }

    private void saveWeatherToCache(WeatherResponse weather) {
        SharedPreferences prefs = activity.getSharedPreferences("WeatherCache", Context.MODE_PRIVATE);
        prefs.edit()
                .putString("city", weather.cityName)
                .putString("main", weather.weather.get(0).main)
                .putString("desc", weather.weather.get(0).description)
                .putFloat("temp", (float) weather.main.temp)
                .putInt("humidity", weather.main.humidity)
                .putInt("pressure", weather.main.pressure)
                .putString("icon", weather.weather.get(0).icon)
                .apply();
    }

    private void showCachedWeather() {
        SharedPreferences prefs = activity.getSharedPreferences("WeatherCache", Context.MODE_PRIVATE);
        String city = prefs.getString("city", null);

        if (city == null) {
            // üîπ —è–∫—â–æ –∫–µ—à—É –Ω–µ–º–∞—î, –ø–æ–∫–∞–∑–∞—Ç–∏ –∑–∞–≥–ª—É—à–∫—É "–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é..."
            ((TextView) activity.findViewById(R.id.textWeatherCity))
                    .setText("–ú—ñ—Å—Ç–æ: ‚Äî");
            ((TextView) activity.findViewById(R.id.textWeatherMain))
                    .setText("–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –ø–æ–≥–æ–¥—É‚Ä¶");
            ((TextView) activity.findViewById(R.id.textWeatherDescription))
                    .setText("");
            ((TextView) activity.findViewById(R.id.textWeatherTemp))
                    .setText("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ‚Äî");
            ((TextView) activity.findViewById(R.id.textWeatherHumidity))
                    .setText("–í–æ–ª–æ–≥—ñ—Å—Ç—å: ‚Äî");
            ((TextView) activity.findViewById(R.id.textWeatherPressure))
                    .setText("–¢–∏—Å–∫: ‚Äî");
            ((ImageView) activity.findViewById(R.id.imageWeatherIcon))
                    .setImageResource(R.drawable.ic_user); // üëà —Ç–≤–æ—è —ñ–∫–æ–Ω–∫–∞-–∑–∞–≥–ª—É—à–∫–∞
            return;
        }

        // üîπ —è–∫—â–æ –∫–µ—à —î ‚Üí –ø–æ–∫–∞–∑—É—î–º–æ –π–æ–≥–æ
        ((TextView) activity.findViewById(R.id.textWeatherCity))
                .setText("–ú—ñ—Å—Ç–æ: " + city);
        ((TextView) activity.findViewById(R.id.textWeatherMain))
                .setText("–ü–æ–≥–æ–¥–∞: " + prefs.getString("main", ""));
        ((TextView) activity.findViewById(R.id.textWeatherDescription))
                .setText("–û–ø–∏—Å: " + prefs.getString("desc", ""));
        ((TextView) activity.findViewById(R.id.textWeatherTemp))
                .setText("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + prefs.getFloat("temp", 0) + "¬∞C");
        ((TextView) activity.findViewById(R.id.textWeatherHumidity))
                .setText("–í–æ–ª–æ–≥—ñ—Å—Ç—å: " + prefs.getInt("humidity", 0) + "%");
        ((TextView) activity.findViewById(R.id.textWeatherPressure))
                .setText("–¢–∏—Å–∫: " + prefs.getInt("pressure", 0) + " –≥–ü–∞");

        ImageView image = activity.findViewById(R.id.imageWeatherIcon);
        String icon = prefs.getString("icon", null);
        if (icon != null) {
            String iconUrl = "https://openweathermap.org/img/wn/" + icon + "@2x.png";
            Picasso.get().load(iconUrl).into(image);
        }
    }

}
